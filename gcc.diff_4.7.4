diff -uprN gcc-4.7.4/config.sub gcc-4.7.4_/config.sub
--- gcc-4.7.4/config.sub	2012-08-06 23:34:27.000000000 +0900
+++ gcc-4.7.4_/config.sub	2019-03-11 22:29:30.912280511 +0900
@@ -997,6 +997,10 @@ case $basic_machine in
 	ppc64le-* | powerpc64little-*)
 		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
+	xenon)
+		basic_machine=powerpc64-unknown
+		os=-linux-gnu
+		;;
 	ps2)
 		basic_machine=i386-ibm
 		;;
diff -uprN gcc-4.7.4/gcc/config/rs6000/altivec.md gcc-4.7.4_/gcc/config/rs6000/altivec.md
--- gcc-4.7.4/gcc/config/rs6000/altivec.md	2012-06-05 03:15:46.000000000 +0900
+++ gcc-4.7.4_/gcc/config/rs6000/altivec.md	2019-03-11 22:29:30.924280390 +0900
@@ -634,7 +634,7 @@
 		      (match_operand:VIshort 2 "register_operand" "v")
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMU))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumu<VI_char>m %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -644,7 +644,7 @@
 		      (match_operand:VIshort 2 "register_operand" "v")
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMM))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumm<VI_char>m %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -654,7 +654,7 @@
 		      (match_operand:V8HI 2 "register_operand" "v")
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMSHM))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumshm %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -665,7 +665,7 @@
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMUHS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumuhs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -676,7 +676,7 @@
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMSHS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumshs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -737,7 +737,7 @@
                       (match_operand:V8HI 3 "register_operand" "v")]
 		     UNSPEC_VMHADDSHS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmhaddshs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -748,7 +748,7 @@
                       (match_operand:V8HI 3 "register_operand" "v")]
 		     UNSPEC_VMHRADDSHS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmhraddshs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -879,7 +879,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULEUB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmuleub %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -888,7 +888,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULESB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulesb %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -897,7 +897,7 @@
         (unspec:V4SI [(match_operand:V8HI 1 "register_operand" "v")
                       (match_operand:V8HI 2 "register_operand" "v")]
 		     UNSPEC_VMULEUH))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmuleuh %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -906,7 +906,7 @@
         (unspec:V4SI [(match_operand:V8HI 1 "register_operand" "v")
                       (match_operand:V8HI 2 "register_operand" "v")]
 		     UNSPEC_VMULESH))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulesh %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -915,7 +915,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULOUB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmuloub %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -924,7 +924,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULOSB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulosb %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -933,7 +933,7 @@
         (unspec:V4SI [(match_operand:V8HI 1 "register_operand" "v")
                       (match_operand:V8HI 2 "register_operand" "v")]
 		     UNSPEC_VMULOUH))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulouh %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -942,7 +942,7 @@
         (unspec:V4SI [(match_operand:V8HI 1 "register_operand" "v")
                       (match_operand:V8HI 2 "register_operand" "v")]
 		     UNSPEC_VMULOSH))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulosh %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1158,7 +1158,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUM4UBS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsum4ubs %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1168,7 +1168,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUM4S))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsum4s<VI_char>s %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1178,7 +1178,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUM2SWS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsum2sws %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1188,7 +1188,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUMSWS))
    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsumsws %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
diff -uprN gcc-4.7.4/gcc/cp/cfns.gperf gcc-4.7.4_/gcc/cp/cfns.gperf
--- gcc-4.7.4/gcc/cp/cfns.gperf	2009-04-22 04:03:23.000000000 +0900
+++ gcc-4.7.4_/gcc/cp/cfns.gperf	2019-03-11 22:32:02.066876327 +0900
@@ -22,6 +22,9 @@ __inline
 static unsigned int hash (const char *, unsigned int);
 #ifdef __GNUC__
 __inline
+#ifdef __GNUC_STDC_INLINE__
+__attribute__ ((__gnu_inline__))
+#endif
 #endif
 const char * libc_name_p (const char *, unsigned int);
 %}
diff -uprN gcc-4.7.4/gcc/cp/cfns.h gcc-4.7.4_/gcc/cp/cfns.h
--- gcc-4.7.4/gcc/cp/cfns.h	2009-04-22 04:03:23.000000000 +0900
+++ gcc-4.7.4_/gcc/cp/cfns.h	2019-03-11 22:31:18.871260560 +0900
@@ -53,6 +53,9 @@ __inline
 static unsigned int hash (const char *, unsigned int);
 #ifdef __GNUC__
 __inline
+#ifdef __GNUC_STDC_INLINE__
+__attribute__ ((__gnu_inline__))
+#endif
 #endif
 const char * libc_name_p (const char *, unsigned int);
 /* maximum key range = 391, duplicates = 0 */
diff -uprN gcc-4.7.4/libstdc++-v3/configure gcc-4.7.4_/libstdc++-v3/configure
--- gcc-4.7.4/libstdc++-v3/configure	2012-11-06 08:42:32.000000000 +0900
+++ gcc-4.7.4_/libstdc++-v3/configure	2019-03-11 22:29:30.928280351 +0900
@@ -10802,6 +10802,7 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu)
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
+  lt_cv_shlibpath_overrides_runpath=no
 
   # Some binutils ld are patched to set DT_RUNPATH
   if test "${lt_cv_shlibpath_overrides_runpath+set}" = set; then :
